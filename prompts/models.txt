class Fatura(models.Model):
    """Modelo para armazenar informações das faturas"""
    unidade_consumidora = models.ForeignKey(
        UnidadeConsumidora, on_delete=models.CASCADE, related_name='faturas', null=True, blank=True)
    distribuidora_id = models.IntegerField(null=True, blank=True)
    data_cadastro = models.DateTimeField(default=timezone.now)
    ultima_atualizacao = models.DateTimeField(auto_now=True, null=True)
    arquivo_pdf = models.CharField(max_length=255, null=True, blank=True)
    status = models.CharField(max_length=50, null=True, blank=True)
    mensagem_erro = models.TextField(null=True, blank=True)
    dados_extraidos = models.JSONField(null=True, blank=True)
    processado = models.BooleanField(default=False)
    status_processamento = models.CharField(
        max_length=50, null=True, blank=True)
    usuario_id = models.IntegerField(null=True, blank=True)

    def __str__(self):
        if hasattr(self, 'unidade_consumidora') and self.unidade_consumidora:
            return f"Fatura {self.id} - UC {self.unidade_consumidora.numero_uc}"
        return f"Fatura {self.id}"

    class Meta:
        verbose_name = "Fatura"
        verbose_name_plural = "Faturas"
        db_table = '"modulo_solar_db"."fatura"'
        managed = False